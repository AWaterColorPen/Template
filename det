#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <cmath>

using namespace std;

const double eps = 1e-8 ;
int sgn(double x) { return (x < -eps) ? -1 : (x > eps) ; }

struct DET {
	static const int M = 10 ;
	int n;
	double a[M][M];
	DET () {}
	DET (int n) : n(n) {}
	double det()
	{
		double ans = 1;
		for (int i = 0; i < n; i++)
		{
			for (int j = i + 1; j < n; j++)
				while (sgn(a[j][i]))
				{
					double t = a[i][i] / a[j][i];
					for (int k = i; k < n; k++) a[i][k] = a[i][k] - a[j][k] * t;
					for (int k = i; k < n; k++) swap(a[i][k], a[j][k]);
					ans = -ans;
                		}
			if (sgn(a[i][i]) == 0) return 0;
			ans *= a[i][i];
		}
		return ans;
	}
}   ;
