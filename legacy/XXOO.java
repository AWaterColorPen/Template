树状数组：
1.	lowbit(x) = x & (-x),
	next = now + lowbit(now);
	next = now - lowbit(now);
2.	树状数组可以做区间修改（也就是传说中的扩展树状数组）。用Delta[i]表示从[i,n]的修改量， 切记不能表示[1,i]，因为树状数组Update的时候只会往->n更新。


最小割集：
1.	求一些特殊要求的割的时候，即使残余网络某边->流量==0，此边不一定是割，因为边的两端不一定因为边->流量==0就不连通了。
	例如：当使用源点集S集 汇点集T集 分别标号法时。		
		中间的没有被标号的点之间的边是否连通，与其残余流量==0无关，需要再判断。
		如果，边的至少一端标号，还需注意是否为倒边（即非原始边，乃是后来产生的记录的倒流）。
2.	无向图求割时，是没有倒边的，所有边都是原始边。


有上下界网络流：
1.	对于原图中x->y限流[b~l]，则dif[x]-=b，dif[y]+=b，建边x->y容量l-b。
	对于所有dif[x]>0，建边超级源点S->x，容量dif[x]。
	对于所有dif[y]<0，建边超级汇点y->T，容量-dif[y]。
2.	无源网络判断可行流：直接做一次S->T的最大流，即可。
3.	有源网络判断可行流：
		判断s->t流量为c是否有可行流：建边t->s，容量c，做一次S->T的最大流，即可。
		最小流：二分s->t流量c，判定即可。
		最大流：建边t->s，容量inf，第一次做S->T的最大流，判定是否有可行解。第二次做s->t的最大流，补充最大方案。
4.	方案：
		某边的最终方案=下界b+边的实际流量。
		仅最大流方案需要做s->t的最大流，用以补充可行流以外的方案。
		（可行流受限于限流下界，无法求得残余网络中的s->t的其他流）
5.	费用流限流：
		不适合用有上下界网络流方法，容易限制不了。可以用特殊费用(-inf)强行优先流。
		求最大费用时，使用-cost+INF，不一定适用，如果不确定流经过的边数，就减不了N*INF。
		

2-SAT：
1.	虽然说一定要用对称的性质，但是事实是仔细斟酌建图：到底是什么的对称？到底谁必须->谁？


背包：
	在日常生活中，如果需要能拿得出1到Ki的任意整数数额的钱，往往不会带Ki个一元钱，
	因为那实在是太不方便了，取而代之的是带一些1元和其他一些面值各不相同的非1数额的钱。
	这种思想完全可以运用到这道题上！ 不需要把一种物品拆分成Ki份，而是只要物品拆分到能凑出1到Ki之间任意数量的程度就可以了。
	可以证明，按照二进制的拆分能使件数达到最小，把Ki拆分成1,2,4…2t,Ki-2t+1+1（2t+2>Ki>=2t+1），就一定可以满足最优解要求了。下一步，还是用0-1背包的经典算法。


跳舞链：
1.	精确覆盖为首行中L-R操作，其他行D-U操作。
2.	重复覆盖全为L-R操作。
3.	重复覆盖+精确覆盖：
	可以用重复覆盖+标记数组完成；也可以用重复覆盖+精确覆盖完成，一定要用正确的顺序。
4.	DLX可以用来求解最大子团，先求补集，然后用DLX搜索。


0/1分数规划：
1.	首先化简出分式λ=∑ai/∑bi，然后可得g(λ)= ∑(ai-λbi)=0。然后有两种方法：迭代或者二分，可以用于逼近λ。
	表面上看时间复杂度都是O(logN)的，实际上有常数上的差异，有可能差十几倍，具体看情况，暂时无法理论分析。
	

仙人掌图DFS生成树：
1.	仙人掌图的DFS树没有横向边。
2.	Low(u)<=DFS(v) (u是v的儿子)
3.	设某个点v有a(v)个儿子的Low值小于DFS(v)，同时v自己有b(v)条逆向边。那么a(v)+b(v)<2。


求小于等于N的与N互质的数的和：
1.	ANS=N*phi(N)/2
2.	欧拉函数phi(n)表示小于n的正整数中有多少个数与n互质。
3.	phi(n)=∑{d|n} mu(d)*n/d
4.	n=∑{d|n} phi(n)

莫比乌斯函数完整定义的通俗表达：
1.	莫比乌斯函数mu(n)的定义域是N
2.	mu(1)=1
3.	当n存在平方因子时，mu(n)=0
4.	当n是素数或奇数个不同素数之积时，mu(n)=-1
5.	当n是偶数个不同素数之积时，mu(n)=1
6.	(n==1)=∑{d|n} mu(n)


斐波那契数列：
1.	平方与前后项：	从第二项开始，每个奇数项的平方都比前后两项之积多1，每个偶数项的平方都比前后两项之积少1。
2.	与集合子集：	斐波那契数列的第n+2项同时也代表了集合{1,2,...,n}中所有不包含相邻正整数的子集个数。
3.	求和：			f(0)+f(1)+f(2)+...+f(n)=f(n+2)-1
4.	奇数项求和：	f(1)+f(3)+f(5)+...+f(2n-1)=f(2n)
5.	偶数项求和：	f(2)+f(4)+f(6)+...+f(2n)=f(2n+1)-1
6.	平方求和：		[f(0)]^2+[f(1)]^2+...+[f(n)]^2=f(n)*f(n+1)
7.	加减求和：		f(0)-f(1)+f(2)-...+(-1)^n*f(n)=(-1)^n*[f(n+1)-f(n)]-1
8.	和项数公式：	f(n+m)=f(n+1)*f(m)+f(n)*f(m-1)
9.	奇数项与前后的平方：f(2n-1)=[f(n)]^2-[f(n-2)]^2
10.	偶数项与前后的平方：f(2n+1)=[f(n)]^2+[f(n+1)]^2
11.	隔项关系：		3*f(n)=f(n+2)+f(n-2)
12.	两倍项关系：	f(2n)/f(n)=f(n-1)+f(n+1)


欧拉定理：
	a^phi(n) == 1 (mod n)
	多面体的面数(F) + 顶点数(V) - 棱数(E) = f(p)
	简单多面体 f(p) = 2，带一个洞的多面体 f(p) = 0。
	设 G 是连通的平面图，n，m，r 分别是其顶点数、边数和面数，则v – e + f = 2
	(欧拉公式的推广形式) 对于具有 k (k >= 1) 个连通分支的平面图 G ，有 v – e + f = k + 1 。
	
	
费马定理：
	a^(p-1) == 1 (mod p)，p是质数。

	
离散对数定理：
	g^(x) == g^(y) (mod n) <==> x == y (mod phi(n))
	
	
马的哈密尔顿链：
	n*n棋盘存在哈氏链的充要条件是n>3
	
	
马的哈密尔顿圈：
	m*n（m<=n）棋盘不存在哈氏圈的充要条件是：
		m,n满足下列条件之一
		1.	m,n都是奇数
		2.	m=1,2或4
		3.	m=3且n=4,6,8

Euler图：
	Euler回路：G中经过每条边一次且仅一次的回路
	Euler路径：G中经过每条边一次且仅一次的路径
	无向图存在Euler回路定理：当它是连通图+顶点度数为偶数
	无向图存在Euler路径定理：当它是连通图+除两个顶点度为奇数外，其余为偶数
	有向图存在Euler回路定理：当它是连通图+顶点入度 == 出度
	有向图存在Euler路径定理：当它是连通图+除一个顶点的入度和出度的差的绝对值小1外，其余相等

给出一张混合图（有有向边，也有无向边），判断是否存在欧拉回路。
	首先是对图中的无向边随意定一个方向，然后统计每个点的入度（indeg）和出度（outdeg），如果（indeg - outdeg）是奇数的话，一定不存在欧拉回路；
	如果所有点的入度和出度之差都是偶数，那么就开始网络流构图：
	1，对于有向边，舍弃；对于无向边，就按照最开始指定的方向建权值为 1 的边；
	2，对于入度小于出度的点，从源点连一条到它的边，权值为（outdeg - indeg）/ 2；出度小于入度的点，连一条它到汇点的权值为（indeg - outdeg）/2 的边；

	
Pólya原理计算全部互异的组合状态的个数：
1.	Zk (K不动置换类)：设G是1…n的置换群。若K是1…n中某个元素，G中使K保持不变的置换的全体，记以Zk，叫做G中使K保持不动的置换类，简称K不动置换类。
2.	Ek (等价类)：设G是1…n的置换群。若K是1…n中某个元素，K在G作用下的轨迹，记作Ek。即K在G的作用下所能变化成的所有元素的集合。
3.	│Ek│*│Zk│=│G│
4.	D(aj) 表示在置换aj下不变的元素的个数
5.	∑{1<=j<=n}│Zj│=∑{1<=i<=s}│D(ai)│

6.	Burnside引理：
		互异的组合状态的个数	L = ∑{1<=j<=n}│Zj│ / │G│ = ∑{1<=i<=s}│D(ai)│ / │G│
7.	Pólya定理
		设G是p个对象的一个置换群，用m种颜色涂染p个对象，则不同染色方案为：
			L = 1/│G│ * ∑{1<=i<=n}(m^(c(gi)))
		其中G={g1 ,…gs}   c(gi )为置换gi的循环节数(i=1…s) 例如：g=(1)(2)(3)(4) c(g)=4
    Pólya定理的时间复杂度为O(s*p) (这里s表示置换个数，p表示格子数)
	
8.	根据Burnside定理，本质不同的方案数为在每个置换下稳定不动的方案的总合除以总置换数。
	而要得到在置换下稳定不动的方案，即把置换的每个循环节都染上相同的颜色，所以D(gi)=mc(gi)


Havel定理：
1.	给定一个非负整数序列{dn}，若存在一个无向图使得图中各点的度与此序列一一对应，则称此序列可图化。进一步，若图为简单图，则称此序列可简单图化。
2.	可图化的判定：d1+d2+……dn=0(mod 2)。关于具体图的构造，我们可以简单地把奇数度的点配对，剩下的全部搞成自环。

3.	可简单图化的判定(Havel定理)：把序列排成不增序，即d1>=d2>=……>=dn，则d可简单图化当且仅当d’={d2-1，d3-1，……d(d1+1)-1， d(d1+2)，d(d1+3)，……dn} 可简单图化。
	简单的说，把d排序后，找出度最大的点（设度为d1），把它与度次大的d1个点之间连边，然后这个点就可以不管了，一直继续这个过程，
	直到建出完整的图，或出现负度等明显不合理的情况。


N阶Nim游戏：
1.	有k 堆石子，各包含x1,x2…xk 颗石子。双方玩家轮流操作，每次操作选择其中非空的若干堆，至少一堆但不超过N 堆，
	在这若干堆中的每堆各取走其中的若干颗石子（1 颗，2 颗…甚至整堆），数目可以不同，取走最后一颗石子的玩家获胜。
2.	结论：当且仅当在每一个不同的二进制位上，x1,x2…xk 中在该位上1 的个数是N+1 的倍数时，后手方有必胜策略，否则先手必胜。
3.	注意，N 阶情况下，子游戏的SG 函数只能用来分析胜负，并求必胜策略，而不能求出“N 阶和游戏”的SG 函数。也就是说，
	二进制位下分别加和知识得到一组数，而非一个数。

	
博弈论中SG()函数的求法：
	SG(i)求法，集合S为所有可以直接转移到i状态的已知状态j的SG(j)。即S={SG(j)}。SG(i)=S中从0开始的最小的不存在的数。
	

Surreal Number的一些基本定理：
1.	定理1 对于一个surreal number x = { L | R }，x大于L中的任意一个元素且小于R中的任意一个元素。 
2.	定理2 对于一个surreal number x = { L | R }，若集合L中有最大元素lmax，那么{ lmax | R } = x；类似地，若集合R中有最小元素rmin，那么{ L | rmin } = x。
3.	定理3 如果a < x < b，且x是a到b之间最早出生的surreal number，那么{ a | b } = x
4.	对于surreal number x = { XL | XR }和y = { YL | YR }，x + y = { XL + y, x + YL | XR + y, x + YR }也是一个合法的surreal number。
5.	surreal number的加法满足交换率。
6.	surreal number的加法满足结合率。


SJ定理：
1.	对于任意一个Anti-SG游戏，如果我们规定当局面中所有的单一游戏的SG值为0时，游戏结束，则先手必胜当且仅当：
	（1）游戏的SG函数不为0且游戏中某个单一游戏的SG函数大于1；
	（2）游戏的SG函数为0且游戏中没有单一游戏的SG函数大于1。
2.	有根树中SG的求法： 叶子节点的SG值为0；中间节点的SG值为它的所有子节点的(SG值加1)后的异或和。
3.	有根有环树中SG的求法：
	（1） 对于长度为奇数的环，去掉其中任意一个边之后，剩下的两个链长度同奇偶，抑或之后的SG值不可能为奇数，所以它的SG值为1
	（2） 对于长度为偶数的环，去掉其中任意一个边之后，剩下的两个链长度异奇偶，抑或之后的SG值不可能为0，所以它的SG值为0
4.	有根有环无向图SG的求法：
	将图中的任意一个偶环缩成一个新点，任意一个奇环缩成一个新点加一个新边；所有连到原先环上的边全部改为与新点相连。这样的改动不会影响图的SG值。

	
单纯形法：
	最大化：(∑{i∈N}Ci*Xi)+v
	满足：
		Xj=bj-(∑{i∈N}Aji*Xi)  <==> (∑{i∈N}Aji*Xi)<=bj
		Xi>=0 (i∈N)
		Xj>=0 (j∈B)
	要求：bj>=0

	
掷骰子中的期望：
	m面的骰子，直到某一面连续出现n次，次数的期望 E=((m的n次方)-1)/(m-1)。

	
快速傅里叶变换
1.	FFT的精度误差会出现在相乘元素值较大的时候，这时逆变换后误差会出现在最小项以及最大项附近。
2.	FFT的项数上限与 >= 乘数项数+被乘数项数。
3.	FFT使用手写的CPX比complex快2~3倍，complex+vector更慢。
4.	FFT中变化量tmp与w的求法不一样，更快-误差稍大（如1所说），误差更小-稍慢。


平面图：
	平面图的边不会超过3n-5条。
	
	
区分硬币：
1.	一共有n枚硬币，其中有1枚重量不同，不知轻重。用天平找出。g(k)=(3^k-1)/2。最少次数即为k，使得g(k)>=n。
2.	共有n球其中1个次品，若已知标准球，找出次品轻重：[log3(2n-2)]
3.	共有n球其中1个次品，若已知标准球，找出次品：[log3(2n-3)]
4.	共有n球其中1个次品，若不知标准球，找出次品轻重：[log3(2n+2)]
5.	共有n球其中1个次品，若已知次品轻重，找出次品：[log3n]

	
生成树：
	n个顶点的完全图中有n^(n-2)棵生成树。
	
	
皮克定理：
	一个计算点阵中顶点在格点上的多边形面积公式：S=a+b/2-1
	其中a表示多边形内部的点数，b表示多边形边界上的点数，s表示多边形的面积。
	

数学公式：
	∑{1<=k<=n}k^2 = n(n+1)(2n+1)/6
	∑{1<=k<=n}k^3 = (n(n+1)/2)^2
	∑{1<=k<=n}k^4 = n(n+1)(2n+1)(3*n^2+3*n-1)/30
	∑{1<=k<=n}k^5 = n^2(n+1)^2(2*n^2+2*n-1)/12
	∑{1<=k<=n}k^6 = n(n+1)(2n+1)(3*n^4+6*n^3-3*n+1)/42
	∑{1<=k<=n}k^7 = n^2(n+1)^2(3*n^4+6*n^3-n^2-4*n+2)/24

	
不尽相异元素的全排：
	如果在n个元素中，有n1个元素彼此相同，又有n2个元素彼此相同，...，又有nm个元素彼此相同(n1+n2+...+nm=n)，那这n个元素的全排列称为不尽相异元素的全排列，其排列种数为：n! / (n1!n2!...nm!)


多组组合：
	把n个不同的元素分成m组，第i组有ni个不同的元素，即(n1+n2+...+nm=n)
	这样分组的种数为：n! / (n1!n2!...nm!)

	
有重复的组合：
	从n个不同元素中，每次取出k个元素，允许重复，不管其顺序合并成一组，
	这种组合称为有重复的组合，其组合种数为：C(k, n+k-1)
