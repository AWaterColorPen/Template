#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;
struct FACE {
	int a[3][3];
	bool operator == (const FACE &o) {
		for (int i = 0; i < 3; i++)
			for (int j = 0; j < 3; j++)
				if (a[i][j] != o.a[i][j]) 
					return 0;
		return 1;
	}
	void read(int c)
	{
		for (int i = 0, id = 0; i < 3; i++)
			for (int j = 0; j < 3; j++)
				a[i][j] = c * 9 + id, ++id;
	}
}	;

struct CUBE {
	FACE s[6];
	CUBE () {
		for (int i = 0; i < 6; i++) s[i].read(i);
	}
	bool operator == (const CUBE &o) {
		for (int i = 0; i < 6; i++) if ((s[i] == o.s[i]) == 0) return 0;
		return 1;
	}
	void rotate(int ty)
	{
		int X[6][20]={	
						{ 0, 1, 2, 9,10,11,18,19,20,27,28,29,42,43,44,41,38,37,36,39},
						{ 6, 7, 8,15,16,17,24,25,26,33,34,35,45,46,47,50,53,52,51,48},
						{36,39,42, 0, 3, 6,45,48,51,26,23,20,27,28,29,32,35,34,33,30},
						{44,41,38,18,21,24,53,50,47, 8, 5, 2, 9,10,11,14,17,16,15,12},
						{42,43,44, 9,12,15,47,46,45,35,32,29, 0, 1, 2, 5, 8, 7, 6, 3},
						{38,37,36,27,30,33,51,52,53,17,14,11,18,19,20,23,26,25,24,21} };
		int Y[6][20]={	
						{ 9,10,11,18,19,20,27,28,29, 0, 1, 2,44,41,38,37,36,39,42,43},
						{33,34,35, 6, 7, 8,15,16,17,24,25,26,51,48,45,46,47,50,53,52},
						{26,23,20,36,39,42, 0, 3, 6,45,48,51,33,30,27,28,29,32,35,34},
						{ 8, 5, 2,44,41,38,18,21,24,53,50,47,15,12, 9,10,11,14,17,16},
						{35,32,29,42,43,44, 9,12,15,47,46,45, 6, 3, 0, 1, 2, 5, 8, 7},
						{17,14,11,38,37,36,27,30,33,51,52,53,24,21,18,19,20,23,26,25} };
					
		CUBE tmp = *this;
		for (int i = 0, k = ty >> 1; i < 20; i++)
		{
			int x = X[k][i], y = Y[k][i];
			if (ty & 1) s[y / 9].a[y % 9 / 3][y % 3] = tmp.s[x / 9].a[x % 9 / 3][x % 3];
			else s[x / 9].a[x % 9 / 3][x % 3]=tmp.s[y / 9].a[y % 9 / 3][y % 3];
		}
	}
}	cube;